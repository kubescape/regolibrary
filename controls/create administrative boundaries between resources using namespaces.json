{
    "name": "Create administrative boundaries between resources using namespaces",
    "controlID": "C-0209",
    "description": "Use namespaces to isolate your Kubernetes objects.",
    "long_description": "Limiting the scope of user permissions can reduce the impact of mistakes or malicious activities. A Kubernetes namespace allows you to partition created resources into logically named groups. Resources created in one namespace can be hidden from other namespaces. By default, each resource created by a user in Kubernetes cluster runs in a default namespace, called `default`. You can create additional namespaces and attach resources and users to them. You can use Kubernetes Authorization plugins to create policies that segregate access to namespace resources between different users.",
    "remediation": "Follow the documentation and create namespaces for objects in your deployment as you need them.",
    "manual_test": "Run the below command and review the namespaces created in the cluster.\n\n \n```\nkubectl get namespaces\n\n```\n Ensure that these namespaces are the ones you need and are adequately administered as per your requirements.",
    "test": "Lists all namespaces in cluster for user to review",
    "references": [
        "https://workbench.cisecurity.org/sections/1126667/recommendations/1838633"
    ],
    "attributes": {
        "armoBuiltin": true
    },
    "rulesNames": [
        "list-all-namespaces"
    ],
    "baseScore": 5,
    "impact_statement": "You need to switch between namespaces for administration.",
    "default_value": "By default, Kubernetes starts with two initial namespaces:\n\n 1. `default` - The default namespace for objects with no other namespace\n2. `kube-system` - The namespace for objects created by the Kubernetes system\n3. `kube-node-lease` - Namespace used for node heartbeats\n4. `kube-public` - Namespace used for public information in a cluster"
}