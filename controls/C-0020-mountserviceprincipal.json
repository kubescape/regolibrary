{
  "name": "Mount service principal",
  "attributes": {
    "armoBuiltin": true,
    "microsoftMitreColumns": [
      "Credential Access"
    ],
    "controlTypeTags": [
      "compliance"
    ]
  },
  "description": "When a cluster is deployed in the cloud, in some cases attackers can leverage their access to a container in the cluster to gain cloud credentials. This control determines if any workload contains a volume with potential access to cloud credential.",
  "example": "apiVersion: v1kind: Podmetadata:  name: test-pdspec:  containers:  - image: k8s.gcr.io/test-webserver    name: test-container    volumeMounts:    - mountPath: /test-pd      name: test-volume  volumes:  - name: test-volume    hostPath: # This field triggers failure!      path: /data      type: Directory",
  "remediation": "Refrain from using path mount to known cloud credentials folders or files .",
  "rulesNames": [
    "alert-mount-potential-credentials-paths"
  ],
  "long_description": "When the cluster is deployed in the cloud, in some cases attackers can leverage their access to a container in the cluster to gain cloud credentials. For example, in AKS each node contains service principal credential.",
  "test": "Check which workloads have volumes with potential access to known cloud credentials folders or files in node, like “/etc/kubernetes/azure.json” for Azure.",
  "controlID": "C-0020",
  "baseScore": 4,
  "scanningScope": {
    "matches": [
      [
        "cluster"
      ],
      [
        "file"
      ]
    ]
  }
}
