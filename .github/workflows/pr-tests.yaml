name: pr-tests
on:
  push:
    branches: [ master, main ]
  pull_request:
    # run for every chnage in the PR
    types: [ opened, synchronize, reopened ]
    # Do not run the pipeline if only Markdown files changed
    paths-ignore: ['**.md']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGO_ARTIFACT_KEY_NAME: rego_artifact
  REGO_ARTIFACT_PATH: release

jobs:
  # testing link checks
  markdown-link-check:
    outputs:
      REGO_ARTIFACT_KEY_NAME: ${{ steps.set_outputs.outputs.REGO_ARTIFACT_KEY_NAME }}
      REGO_ARTIFACT_PATH: ${{ steps.set_outputs.outputs.REGO_ARTIFACT_PATH }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Check links
        uses: gaurav-nelson/github-action-markdown-link-check@5c5dfc0ac2e225883c0e5f03a85311ec2830d368
        with:
          use-verbose-mode: 'yes'

      - name: Set outputs
        id: set_outputs
        run: |
          echo "REGO_ARTIFACT_KEY_NAME=${{ env.REGO_ARTIFACT_KEY_NAME }}" >> $GITHUB_OUTPUT
          echo "REGO_ARTIFACT_PATH=${{ env.REGO_ARTIFACT_PATH }}" >> $GITHUB_OUTPUT

  # testing rego library
  test_rego:
    name: Test Regos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@50fbc622fc4ef5163becd7fab6573eac35f8462e
      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568
        with:
          go-version: 1.19
      - name: Test Regoes
        working-directory: testrunner
        run: |-
          apt update && apt install -y cmake
          GOPATH=$(go env GOPATH) make

  # main job of testing and building the env. 
  test_pr_checks:
    permissions:
      pull-requests: write
    uses: kubescape/workflows/.github/workflows/go-basic-tests.yaml@main
    with:
      GO_VERSION: 1.19
      BUILD_PATH: github.com/kubescape/regolibrary/gitregostore/...
    secrets: inherit

  ks-and-rego-test:
    uses: kubescape/workflows/.github/workflows/kubescape-cli-e2e-tests.yaml@main
    needs: [markdown-link-check, test_rego, test_pr_checks]
    with:
      DOWNLOAD_ARTIFACT_KEY_NAME: ${{ needs.markdown-link-check.outputs.REGO_ARTIFACT_KEY_NAME }}
      BINARY_TESTS: '[  "scan_nsa", 
                        "scan_mitre", 
                        "scan_with_exceptions", 
                        "scan_repository", 
                        "scan_local_file", 
                        "scan_local_glob_files", 
                        "scan_local_list_of_files", 
                        "scan_nsa_and_submit_to_backend", 
                        "scan_mitre_and_submit_to_backend", 
                        "scan_local_repository_and_submit_to_backend", 
                        "scan_repository_from_url_and_submit_to_backend", 
                        "scan_with_exception_to_backend", 
                        "scan_with_custom_framework", 
                        "scan_customer_configuration", 
                        "host_scanner"
                      ]'
      DOWNLOAD_ARTIFACT_PATH: ${{ needs.build-and-rego-test.outputs.REGO_ARTIFACT_PATH }}
    secrets: inherit