{
    "controlID": "CIS-4.2.2",
    "name": "Minimize the admission of containers wishing to share the host process ID namespace",
    "description": "Do not generally permit containers to be run with the `hostPID` flag set to true.",
    "long_description": "A container running in the host's PID namespace can inspect processes running outside the container. If the container also has access to ptrace capabilities this can be used to escalate privileges outside of the container.\n\n There should be at least one PodSecurityPolicy (PSP) defined which does not permit containers to share the host PID namespace.\n\n If you need to run containers which require hostPID, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.",
    "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the `.spec.hostPID` field is omitted or set to false.",
    "manual_test": "Get the set of PSPs with the following command:\n\n \n```\nkubectl get psp\n\n```\n For each PSP, check whether privileged is enabled:\n\n \n```\nkubectl get psp <name> -o=jsonpath='{.spec.hostPID}'\n\n```\n Verify that there is at least one PSP which does not return true.",
    "references": [
        "<https://kubernetes.io/docs/concepts/policy/pod-security-policy>\n\n  <https://docs.microsoft.com/security/benchmark/azure/security-controls-v2-data-protection#dp-2-protect-sensitive-data>"
    ],
    "attributes": {
        "armoBuiltin": true
    },
    "rulesNames": [],
    "baseScore": 0,
    "impact_statement": "Pods defined with `spec.hostPID: true` will not be permitted unless they are run under a specific PSP.",
    "default_value": "By default, PodSecurityPolicies are not defined."
}